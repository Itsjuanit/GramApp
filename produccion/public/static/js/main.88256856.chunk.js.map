{"version":3,"sources":["logo.svg","component-nav.js","component-fileUpload.js","component-modal.js","component-post.js","load.gif","component-loading.js","component-feed.js","page-feed.js","instashot.png","page-home.js","App.js","serviceWorker.js","index.js"],"names":["Nav","firebase","auth","signOut","then","result","console","log","window","location","href","catch","error","code","message","Fragment","className","src","Logo","alt","id","onClick","this","handleLogout","data-target","props","avatar","nombre","React","Component","FileUpload","state","uploadValue","value","max","type","onChange","onUpload","width","picture","Modal","user","photoURL","displayName","txt","handleChange","e","setState","target","handleUpload","preventDefault","file","files","task","storage","ref","name","put","on","snapshot","percentage","bytesTransferred","totalBytes","record","pic","metadata","fullPath","database","push","set","M","AutoInit","onAuthStateChanged","email","substr","search","htmlFor","Post","url","referencia","child","getDownloadURL","Loading","load","FeedContent","data","loading","concat","val","map","item","i","reverse","Feed","history","ReactDOM","createPortal","document","getElementById","Home","provider","GoogleAuthProvider","signInWithPopup","insta","handleAuth","clasName","App","exact","path","component","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88256856.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9579ece1.svg\";","import React from \"react\";\r\nimport Logo from \"./logo.svg\";\r\nimport firebase from \"firebase/app\";\r\n\r\nclass Nav extends React.Component {\r\n  handleLogout() {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(result => {\r\n        console.log(\"Desconectamos guacho\");\r\n        window.location.href = \"/\";\r\n      })\r\n      .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"nav valign-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"row  margin0\">\r\n              <div className=\"col s2 l1  right-align flex\">\r\n                <img src={Logo} alt=\"\" className=\"logo\" />\r\n              </div>\r\n              <div className=\"col s3 l1 flex\">\r\n                <p className=\"titulo\">GramApp</p>\r\n              </div>\r\n              <div className=\"col s2 l1 offset-s5 offset-l7 right-align flex\">\r\n                <ul id=\"dropdown2\" className=\"dropdown-content deep-purple darken-2\">\r\n                  <li>\r\n                    <a onClick={this.handleLogout}>Salir</a>\r\n                  </li>\r\n                </ul>\r\n                <a\r\n                  className=\"dropdown-trigger\"\r\n                  href=\"#!\"\r\n                  data-target=\"dropdown2\"\r\n                >\r\n                  <img\r\n                    src={this.props.avatar}\r\n                    alt={this.props.nombre}\r\n                    className=\"circle cardPic inline\"\r\n                  />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FileUpload extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      uploadValue: 0\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <progress value={this.props.uploadValue} max=\"100\">\r\n          {this.state.uploadValue} %\r\n        </progress>\r\n        <br />\r\n        <input type=\"file\" onChange={this.props.onUpload} />\r\n        <br />\r\n        <img width=\"320\" src={this.state.picture} alt=\"\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport M from \"materialize-css\";\r\nimport FileUpload from \"./component-fileUpload\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/firebase-storage\";\r\n\r\nclass Modal extends React.Component {\r\n  state = {\r\n    user: {\r\n      photoURL: \"\",\r\n      displayName: \"\",\r\n    },\r\n    txt: \"\",\r\n    uploadValue: 0,\r\n  };\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({ user });\r\n\r\n      if (!this.state.user.photoURL)\r\n        this.setState({\r\n          user: {\r\n            displayName: user.email.substr(0, user.email.search(\"@\")),\r\n            photoURL:\r\n              \"https://cdn.icon-icons.com/icons2/1378/PNG/128/avatardefault_92824.png\",\r\n          },\r\n        });\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ txt: e.target.value });\r\n  };\r\n\r\n  handleUpload = (e) => {\r\n    e.preventDefault();\r\n\r\n    const file = e.target.files[0];\r\n    const storageRef = firebase.storage().ref(`fotos/${file.name}`);\r\n    const task = storageRef.put(file);\r\n\r\n    task.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        let percentage =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        this.setState({ uploadValue: percentage });\r\n      },\r\n      (error) => {\r\n        console.log(error.message);\r\n      },\r\n      () => {\r\n        const record = {\r\n          avatar: this.state.user.photoURL,\r\n          nombre: this.state.user.displayName,\r\n          txt: this.state.txt,\r\n          pic: task.snapshot.metadata.fullPath,\r\n        };\r\n\r\n        const db = firebase.database();\r\n        const dbRef = db.ref(\"pictures\");\r\n        const newPicture = dbRef.push();\r\n        newPicture.set(record);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <a\r\n          href=\"#modal1\"\r\n          className=\"btn-floating btn-large waves-effect waves-light modal-trigger red FAB\"\r\n          id=\"fab\"\r\n        >\r\n          <i className=\"material-icons deep-purple darken-2 pulse\">add</i>\r\n        </a>\r\n\r\n        <div id=\"modal1\" className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h4>Posteá en GramApp</h4>\r\n            <div className=\"chip\">\r\n              <img src={this.state.user.photoURL} alt=\"User\" />\r\n              {this.state.user.displayName}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <form className=\"col l12\">\r\n                <div className=\"row\">\r\n                  <div className=\"input-field col s9 l4\">\r\n                    <i className=\"material-icons prefix\">mode_edit</i>\r\n                    <textarea\r\n                      id=\"icon_prefix2\"\r\n                      className=\"materialize-textarea\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"icon_prefix2\" >Mensaje</label>\r\n                    <FileUpload\r\n                      onUpload={this.handleUpload}\r\n                      uploadValue={this.state.uploadValue}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firebase-storage\";\r\n\r\nclass Post extends React.Component {\r\n  state = {\r\n    url: null,\r\n  };\r\n\r\n  componentWillMount() {\r\n    let referencia = this.props.pic;\r\n    var pathReference = firebase\r\n      .storage()\r\n      .ref()\r\n      .child(\"fotos\")\r\n      .child(referencia.substr(6))\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        this.setState({ url });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"row margin0\">\r\n              <div className=\"col s3 l2 valign-wrapper\">\r\n                <img\r\n                  src={this.props.avatar}\r\n                  alt={this.props.nombre}\r\n                  className=\"circle cardPic inline\"\r\n                />\r\n              </div>\r\n              <div className=\"col s9 l6 valign-wrapper fix-nombre\">\r\n                <p className=\"inline cardName\">{this.props.nombre}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-image\">\r\n            <img src={this.state.url} alt=\"\" />\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <p>{this.props.txt}</p>\r\n          </div>\r\n        </div>{\" \"}\r\n        <br />\r\n        <br />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","export default __webpack_public_path__ + \"static/media/load.90672f1d.gif\";","import React from \"react\";\r\nimport load from \"./load.gif\";\r\nfunction Loading() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"upp\">\r\n        <div className=\"col-md-12 centrar\">\r\n          <img src={load} alt=\"\" className=\"lo\" />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport Post from \"./component-post\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport Loading from \"./component-loading\";\r\n\r\nclass FeedContent extends React.Component {\r\n  state = {\r\n    data: [],\r\n    loading: null,\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: [],\r\n      loading: true,\r\n    });\r\n    const db = firebase.database();\r\n    const dbRef = db.ref(\"pictures\");\r\n    dbRef.on(\"child_added\", (snapshot) => {\r\n      this.setState({\r\n        data: this.state.data.concat(snapshot.val()),\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.loading && <Loading />}\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {this.state.data\r\n          .map((item, i) => {\r\n            return (\r\n              <Post\r\n                key={i}\r\n                txt={item.txt}\r\n                nombre={item.nombre}\r\n                avatar={item.avatar}\r\n                pic={item.pic}\r\n              />\r\n            );\r\n          })\r\n          .reverse()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedContent;\r\n","import React from \"react\";\r\nimport Nav from \"./component-nav\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"./component-modal\";\r\nimport FeedContent from \"./component-feed\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nclass Feed extends React.Component {\r\n  state = {\r\n    user: {\r\n      photoURL: \"\",\r\n      displayName: \"\",\r\n    },\r\n  };\r\n\r\n  componentWillMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({ user });\r\n      if (this.state.user) {\r\n        this.props.history.push(\"/feed\");\r\n        if (!this.state.user.photoURL)\r\n          this.setState({\r\n            user: {\r\n              displayName: user.email.substr(0, user.email.search(\"@\")),\r\n              photoURL:\r\n                \"https://cdn.icon-icons.com/icons2/1378/PNG/128/avatardefault_92824.png\",\r\n            },\r\n          });\r\n      } else {\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav\r\n          nombre={this.state.user.displayName}\r\n          avatar={this.state.user.photoURL}\r\n        />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col l6 offset-l3\">\r\n              <FeedContent />\r\n\r\n              {ReactDOM.createPortal(\r\n                <Modal />,\r\n                document.getElementById(\"teleport\")\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","export default __webpack_public_path__ + \"static/media/instashot.783489c0.png\";","import React from \"react\";\r\nimport insta from \"./instashot.png\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    user: null,\r\n  };\r\n\r\n  componentWillMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({ user });\r\n      if (this.state.user) {\r\n        this.props.history.push(\"/feed\");\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAuth() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase\r\n      .auth().signInWithPopup(provider).then((result) => {\r\n        this.props.history.push(\"/feed\");\r\n      })\r\n      .catch((error) => console.log(error.code));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container vh100\">\r\n          <div className=\"row \">\r\n            <div className=\"col m4 l5 offset-l1 off\">\r\n              <img alt=\"\" src={insta} />\r\n            </div>\r\n            <div className=\"col offset-s2 s8 m4 l3 top120\">\r\n              <div className=\"card\">\r\n                <div className=\"card-content center\">\r\n                  <img\r\n                    alt=\"Itsjuanit\"\r\n                    className=\"circle homePic\"\r\n                    src=\"https://instagram.fmdz4-1.fna.fbcdn.net/v/t51.2885-19/10520390_585345061591998_1231728696_a.jpg?_nc_ht=instagram.fmdz4-1.fna.fbcdn.net&_nc_ohc=0WGSjmvodrwAX_CM6al&ccb=7-4&oh=72fcff62f251f1f09836b1df29304f7f&oe=608A3933&_nc_sid=7bff83\"\r\n                  />\r\n                  <p>\r\n                    Bienvenidos a <strong>GramApp</strong>, esta app esta\r\n                    creada con React.js, Firebase y Materialize.\r\n                  </p>\r\n                </div>\r\n                <div className=\"card-action center-align\">\r\n                  <button\r\n                    className=\"deep-purple darken-2 btn\"\r\n                    onClick={this.handleAuth}\r\n                  >\r\n                    Iniciar sesión\r\n                  </button>\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col s12 center-align\">\r\n              <a clasName=\"black-text pulse\" href=\"https://portfolio-itsjuanit.now.sh/\" target=\"_blank\">Made with 💜 by Itsjuanit</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport Feed from \"./page-feed\";\r\nimport Home from \"./page-home\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/feed\" component={Feed} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyA7guxSk-tg4ck84uTymhZeuRuppRZsApw\",\r\n  authDomain: \"itsohdb.firebaseapp.com\",\r\n  databaseURL: \"https://itsohdb-default-rtdb.firebaseio.com\",\r\n  projectId: \"itsohdb\",\r\n  storageBucket: \"itsohdb.appspot.com\",\r\n  messagingSenderId: \"775472829165\",\r\n  appId: \"1:775472829165:web:5090c3bfc9f3fa6c88b2e4\",\r\n  measurementId: \"G-1X71M9XMR1\"\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}